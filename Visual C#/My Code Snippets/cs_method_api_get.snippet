<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets xmlns="http://schemas.microsoft.com/VisualStudio/2005/CodeSnippet">
  <CodeSnippet Format="1.0.0">
    <Header>
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
      <Title>cs_method_api_get</Title>
      <Author>Y.Toyoda</Author>
      <Description>URLを指定してAPIからjson文字列を取得します。</Description>
      <HelpUrl>www.microsoft.com</HelpUrl>
      <Shortcut>cs_method_api_get</Shortcut>
    </Header>
    <Snippet>
      <Imports>
        <Import>
          <Namespace>System.Net.Http</Namespace>
        </Import>
      </Imports>
      <Code Language="csharp" Kind="method decl" Delimiter="#">
        <![CDATA[
        // コントローラ例(パラメータがaccountとpasswordの場合)
        [AllowAnonymous]
        public async Task<ActionResult> OpsCoopAsync(string account, string password)
        {
            // TODO:認証する
            if (string.IsNullOrWhiteSpace(account) || string.IsNullOrWhiteSpace(password))
            {
                _logger.LogError($"パラメータがありません。account:{account} password:{password}");
                return BadRequest(new { Message = $"パラメータがありません。account:{account} password:{password}" });
            }
            
            // TODO:処理を書くこと
                return Ok(new { Message = $"処理が完了しました。" });
        }
        
        /// <summary>
        /// URLを指定してAPIからjson文字列を取得します
        /// </summary>
        /// <param name="url">httpで始まるURL</param>
        /// <returns>json</returns>
        private string Get(string url)
        {
            url = url.Trim('/');
            //string url = "http://weather.livedoor.com/forecast/webservice/json/v1";

            // TODO:必要なら以下のようにURLパラメータを付ける
            //var parameters = new Dictionary<string, string>
            //{
            //    { "account", "130010" }
            //    { "password", "abcdefgh" }
            //};
            
            //url = $"{url}?;
            //foreach (var parameter in parameters)
            //{
            //    url = $"{url}&{item.Key}={parameter.Value}";
            //}

            using var client = new HttpClient();
            string json = client.GetStringAsync(url).Result;
            return json;
            // TODO:受け取ったJSONは任意の型のオブジェクトにデシリアライズして使用する
            // JsonConvert.DeserializeObject<dynamic>(getstr).Message;
        }]]></Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>